// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CliUtils buildBaseArgs should preserve already set properties (that are not undefined) 1`] = `
Object {
  "$0": "test exe",
  "_": Array [
    "cmd1",
    "cmd2",
  ],
  "test": true,
}
`;

exports[`CliUtils buildBaseArgs should preserve the _ and $0 properties 1`] = `
Object {
  "$0": "test exe",
  "_": Array [
    "cmd1",
    "cmd2",
  ],
}
`;

exports[`CliUtils buildBaseArgs should remove properties that are set to undefined 1`] = `
Object {
  "$0": "test exe",
  "_": Array [
    "cmd1",
    "cmd2",
  ],
}
`;

exports[`CliUtils getOptValueFromProfiles should return args (from definitions with no hyphen in name) extracted from loaded profile 1`] = `
Object {
  "nohyphen": "specified in profile",
}
`;

exports[`CliUtils getOptValueFromProfiles should return args (with both cases) extracted from loaded profile, preferring the camel case 1`] = `
Object {
  "could-be-either": "should be me",
  "couldBeEither": "should be me",
}
`;

exports[`CliUtils getOptValueFromProfiles should return args (with both cases) extracted from loaded profile, preferring the kebab case 1`] = `
Object {
  "fake-string-opt": "should be me",
  "fakeStringOpt": "should be me",
}
`;

exports[`CliUtils getOptValueFromProfiles should return args with aliases if extracted option from a profile 1`] = `
Object {
  "w": "should have 'w' on args object too",
  "with-alias": "should have 'w' on args object too",
  "withAlias": "should have 'w' on args object too",
}
`;

exports[`CliUtils getOptValueFromProfiles should return args with both cases, if the option is camel and the profile is kebab 1`] = `
Object {
  "could-be-either": "should be me",
  "couldBeEither": "should be me",
}
`;

exports[`CliUtils getOptValueFromProfiles should return args with both cases, if the option is kebab and the profile is camel 1`] = `
Object {
  "fake-string-opt": "should be me",
  "fakeStringOpt": "should be me",
}
`;

exports[`CliUtils getOptValueFromProfiles should throw an imperative error if a required profile is not present 1`] = `"Profile of type \\"banana\\" does not exist within the loaded profiles for the command and it is marked as required."`;

exports[`CliUtils should be able to produce the --dash-form of any options 1`] = `"--some-option"`;

exports[`CliUtils should be able to produce the --dash-form of any options 2`] = `"-s"`;

exports[`CliUtils should be able to produce the --dash-form of any options 3`] = `"---some-option"`;

exports[`CliUtils should be able to produce the --dash-form of any options 4`] = `"----some-option"`;

exports[`CliUtils should be able to produce the --dash-form of any options 5`] = `"---s"`;

exports[`CliUtils should be able to produce the --dash-form of any options 6`] = `"----s"`;

exports[`CliUtils should be able to produce the --dash-form of any options 7`] = `"A null or blank option was supplied. Please correct the option definition."`;
